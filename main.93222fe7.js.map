{"version":3,"sources":["scripts/main.js"],"names":["employeesTable","table","document","querySelector","form","createElement","sortBy","selectedRow","initialized","fields","name","title","type","input","validate","value","length","sort","a","b","localeCompare","position","office","select","options","age","salary","formatForView","Number","toLocaleString","formatForEdit","replace","validateData","data","key","hasOwnProperty","result","pushNotification","sortInASC","cellText","cellIndex","rows","aText","cells","innerText","bText","toLowerCase","init","className","label","createInput","dataset","qa","append","insertAdjacentHTML","after","head","addEventListener","e","target","closest","contains","sortedRows","reverse","body","row","classList","remove","toggle","cell","add","cellName","headCells","currentValue","focus","code","blur","innerHTML","preventDefault","FormData","dataObj","Object","fromEntries","tHead","tBodies","message","isError","current","notification","scrollIntoView","setTimeout","field","assign","forEach","option"],"mappings":"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","file":"main.93222fe7.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst employeesTable = {\n  table: document.querySelector('table'),\n  form: document.createElement('form'),\n  sortBy: '',\n  selectedRow: null,\n  initialized: false,\n  fields: {\n    name: {\n      title: 'Name',\n      type: 'input',\n      input: {\n        name: 'name',\n        type: 'text',\n      },\n\n      validate(value) {\n        if (!value) {\n          return `Employee's name is required!`;\n        }\n\n        if (value.length < 4) {\n          return `Employee's name has less than 4 letters!`;\n        }\n\n        return true;\n      },\n\n      sort: (a, b) => a.localeCompare(b),\n    },\n\n    position: {\n      title: 'Position',\n      type: 'input',\n      input: {\n        name: 'position',\n        type: 'text',\n      },\n\n      validate(value) {\n        if (!value) {\n          return `Employee's position is required!`;\n        }\n\n        return true;\n      },\n\n      sort: (a, b) => a.localeCompare(b),\n    },\n\n    office: {\n      title: 'Office',\n      type: 'select',\n      select: {\n        name: 'office',\n      },\n      options: [\n        'Tokyo',\n        'Singapore',\n        'London',\n        'New York',\n        'Edinburgh',\n        'San Francisco',\n      ],\n\n      validate(value) {\n        if (!value) {\n          return `Employee's office is required!`;\n        }\n\n        return true;\n      },\n\n      sort: (a, b) => a.localeCompare(b),\n    },\n\n    age: {\n      title: 'Age',\n      type: 'input',\n      input: {\n        name: 'age',\n        type: 'number',\n      },\n\n      validate(value) {\n        if (!value) {\n          return `Employee's age is required!`;\n        }\n\n        if (value < 18 || value > 90) {\n          return `Employee's age must be from 18 to 90 years old!`;\n        }\n\n        return true;\n      },\n\n      sort: (a, b) => a - b,\n    },\n\n    salary: {\n      title: 'Salary',\n      type: 'input',\n      input: {\n        name: 'salary',\n        type: 'number',\n      },\n\n      formatForView(value) {\n        return `$${Number(value).toLocaleString('en-US')}`;\n      },\n\n      formatForEdit(value) {\n        return value.replace(/[,$]/g, '');\n      },\n\n      validate(value) {\n        if (!value) {\n          return `Employee's salary is required!`;\n        }\n\n        if (value < 1) {\n          return `Employee's salary must be positive!`;\n        }\n\n        return true;\n      },\n\n      sort(a, b) {\n        return this.formatForEdit(a) - this.formatForEdit(b);\n      },\n    },\n  },\n\n  validateData(data) {\n    for (const key in data) {\n      if (!this.fields.hasOwnProperty(key)) {\n        return false;\n      }\n\n      const result = this.fields[key].validate(data[key]);\n\n      if (result !== true) {\n        pushNotification(`Invalid ${key}!`, result, true);\n\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  sortInASC(cellText, cellIndex) {\n    return [...this.rows].sort((a, b) => {\n      const aText = a.cells[cellIndex].innerText;\n      const bText = b.cells[cellIndex].innerText;\n\n      return this.fields[cellText.toLowerCase()].sort(aText, bText);\n    });\n  },\n\n  init() {\n    if (this.initialized) {\n      return;\n    }\n\n    this.form.className = 'new-employee-form';\n\n    for (const key in this.fields) {\n      const label = document.createElement('label');\n      const input = createInput(this.fields[key]);\n\n      input.dataset.qa = key;\n\n      label.innerText = this.fields[key].title + ':';\n      label.append(input);\n\n      this.form.append(label);\n    }\n\n    this.form.insertAdjacentHTML('beforeend', `\n      <button type=\"submit\">Save to table</button>\n    `);\n\n    this.table.after(this.form);\n\n    this.head.addEventListener('click', (e) => {\n      const head = e.target.closest('th');\n\n      if (!head || !this.head.contains(head)) {\n        return;\n      }\n\n      const { innerText, cellIndex } = head;\n\n      const sortedRows = (this.sortBy !== innerText)\n        ? this.sortInASC(innerText, cellIndex)\n        : [...this.rows].reverse();\n\n      this.sortBy = innerText;\n\n      this.body.append(...sortedRows);\n    });\n\n    this.body.addEventListener('click', (e) => {\n      const row = e.target.closest('tr');\n\n      if (!row || !this.body.contains(row)) {\n        return;\n      }\n\n      if (this.selectedRow && this.selectedRow !== row) {\n        this.selectedRow.classList.remove('active');\n      }\n\n      row.classList.toggle('active');\n\n      this.selectedRow = row;\n    });\n\n    this.body.addEventListener('dblclick', (e) => {\n      const cell = e.target.closest('td');\n\n      if (!cell || !this.body.contains(cell)) {\n        return;\n      }\n\n      e.target.closest('tr').classList.add('active');\n\n      const cellName = this.headCells[cell.cellIndex].innerText.toLowerCase();\n      const currentValue = cell.innerText;\n\n      const input = createInput(this.fields[cellName]);\n\n      input.className = 'cell-input';\n\n      input.value = this.fields[cellName].formatForEdit\n        ? this.fields[cellName].formatForEdit(currentValue)\n        : currentValue;\n\n      cell.innerText = '';\n      cell.append(input);\n\n      input.focus();\n\n      input.addEventListener('keyup', ({ code }) => {\n        if (code === 'Enter' || code === 'NumpadEnter') {\n          input.blur();\n        }\n      });\n\n      input.addEventListener('blur', ({ target }) => {\n        const value = this.fields[cellName].formatForView\n          ? this.fields[cellName].formatForView(target.value)\n          : target.value;\n\n        if (this.validateData({ [target.name]: target.value })) {\n          cell.innerHTML = value;\n\n          this.sortBy = '';\n\n          if (value !== currentValue) {\n            pushNotification('Success!', `Employee's ${cellName} was chenged!`);\n          }\n        } else {\n          cell.innerHTML = currentValue;\n        }\n      });\n    });\n\n    this.form.addEventListener('submit', (e) => {\n      e.preventDefault();\n\n      const data = new FormData(e.target);\n      const dataObj = Object.fromEntries(data);\n\n      if (this.validateData(dataObj)) {\n        const row = document.createElement('tr');\n\n        for (const key in dataObj) {\n          const value = this.fields[key].formatForView\n            ? this.fields[key].formatForView(dataObj[key])\n            : dataObj[key];\n\n          row.insertAdjacentHTML('beforeend', `\n            <td>${value}</td>\n          `);\n        }\n\n        this.body.append(row);\n        this.sortBy = '';\n\n        pushNotification('Success!', `Employee's was added!`);\n      }\n    });\n\n    this.initialized = true;\n  },\n\n  get head() {\n    return this.table.tHead;\n  },\n\n  get body() {\n    return this.table.tBodies[0];\n  },\n\n  get headCells() {\n    return [...this.head.rows[0].cells];\n  },\n\n  get rows() {\n    return this.body.rows;\n  },\n};\n\nemployeesTable.init();\n\nfunction pushNotification(title, message, isError) {\n  const current = document.querySelector('.notification');\n  const notification = document.createElement('div');\n\n  notification.className = `notification ${isError ? 'error' : 'success'}`;\n\n  notification.innerHTML = `\n    <h2>${title}</h2>\n    <p>${message}</p>\n  `;\n\n  if (current) {\n    current.remove();\n  }\n\n  document.body.append(notification);\n\n  notification.scrollIntoView();\n\n  setTimeout(() => notification.remove(), 3000);\n}\n\nfunction createInput(field) {\n  switch (field.type) {\n    case 'input': {\n      const input = document.createElement('input');\n\n      Object.assign(input, field.input);\n\n      return input;\n    }\n\n    case 'select': {\n      const select = document.createElement('select');\n\n      Object.assign(select, field.select);\n\n      field.options.forEach(option => {\n        select.insertAdjacentHTML('beforeend', `\n          <option value=\"${option}\">\n            ${option}\n          </option>\n        `);\n      });\n\n      return select;\n    }\n  }\n}\n"]}